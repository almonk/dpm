#!/usr/bin/env ruby
require 'gli'
require 'crack/json'
begin # XXX: Remove this begin/rescue before distributing your app
require 'palette'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/palette` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/palette now"
  exit 64
end

include GLI::App

program_desc 'A package manager for Sketch 3'

version Palette::VERSION
plugins_dir = "#{Dir.home}/Library/Application Support/com.bohemiancoding.sketch3/Plugins/"

subcommand_option_handling :normal

desc 'Describe list here'
arg_name 'Describe arguments to list here'
command :list do |c|
  c.desc 'Update your packages'
  c.action do |global_options,options,args|
    Dir.foreach(plugins_dir) do |x|
      if x.include? ".sketchplugin"
        if File.exist?("#{plugins_dir}#{x}/Contents/Sketch/manifest.json")
          file = File.read("#{plugins_dir}#{x}/Contents/Sketch/manifest.json")
          manifest = Crack::JSON.parse(file)
          puts "Using #{manifest['name']} #{manifest['version']}"
        end
      end
    end
  end
end

command :install do |c|
  c.desc 'Install a new plugin'
  c.action do |global_options,options,args|
    puts "Fetching"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
